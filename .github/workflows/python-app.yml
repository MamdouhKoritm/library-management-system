name: Python Application CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-sqlite:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-tk xvfb

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with pylint
      run: |
        pylint app.py --max-line-length=120 --fail-under=8

    - name: Run SQLite tests with coverage
      env:
        TEST_MODE: "1"
      run: |
        xvfb-run --auto-servernum coverage run -m unittest test_app.py
        coverage xml
        coverage report --fail-under=20

    - name: Verify imports
      run: |
        python -c "import tkinter; print('Tkinter imported successfully')"
        python -c "import mysql.connector; print('MySQL Connector imported successfully')"
        python -c "import dotenv; print('python-dotenv imported successfully')"

    - name: Upload coverage report
      uses: codecov/codecov-action@v4
      with:
        files: ./coverage.xml
        fail_ci_if_error: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  test-mysql:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: testpassword
          MYSQL_DATABASE: Library
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-tk xvfb

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create .env file
      run: |
        echo "DB_HOST=127.0.0.1" > .env
        echo "DB_USER=root" >> .env
        echo "DB_PASS=testpassword" >> .env

    - name: Lint with pylint
      run: |
        pylint app.py --max-line-length=120 --fail-under=8

    - name: Run MySQL tests with coverage
      run: |
        xvfb-run --auto-servernum coverage run -m unittest test_app.py
        coverage xml
        coverage report --fail-under=20

    - name: Verify imports
      run: |
        python -c "import tkinter; print('Tkinter imported successfully')"
        python -c "import mysql.connector; print('MySQL Connector imported successfully')"
        python -c "import dotenv; print('python-dotenv imported successfully')"

    - name: Upload coverage report
      uses: codecov/codecov-action@v4
      with:
        files: ./coverage.xml
        fail_ci_if_error: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}