name: Library Management System CI

     on:
       push:
         branches: [ main ]
       pull_request:
         branches: [ main ]

     jobs:
       test:
         runs-on: ubuntu-latest
         services:
           mysql:
             image: mysql:8.0
             env:
               MYSQL_ROOT_PASSWORD: root
               MYSQL_DATABASE: library_test
               MYSQL_USER: testuser
               MYSQL_PASSWORD: testpass
             ports:
               - 3306:3306
             options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
         strategy:
           matrix:
             python-version: ["3.10"]

         steps:
         - uses: actions/checkout@v4
           name: Check out repository

         - name: Set up Python ${{ matrix.python-version }}
           uses: actions/setup-python@v5
           with:
             python-version: ${{ matrix.python-version }}

         - name: Install dependencies
           run: |
             python -m pip install --upgrade pip
             pip install -r requirements.txt
             pip install pytest pytest-cov

         - name: Run tests with pytest
           run: |
             pytest --junitxml=junit/test-results-${{ matrix.python-version }}.xml --cov=./ --cov-report=xml --cov-report=term-missing
           env:
             MYSQL_HOST: mysql
             MYSQL_USER: testuser
             MYSQL_PASSWORD: testpass
             MYSQL_DATABASE: library_test

         - name: Upload pytest test results
           uses: actions/upload-artifact@v4
           if: always()
           with:
             name: pytest-results-${{ matrix.python-version }}
             path: junit/test-results-${{ matrix.python-version }}.xml